# Copyright 2020 The Oppia Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the 'License');
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an 'AS-IS' BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Script for extending index.yaml.
In Python 2, the index.yaml autoamtically extended with # AUTOGENERATED,
but this is no longer true in Python 3.

This script extracts new kind from
../cloud_datastore_emulator_cache/WEB-INF/index.yaml
and appends it into index.yaml"""

from __future__ import annotations

import os
import yaml


INDEX_YAML_PATH = os.path.join(os.getcwd(), 'index.yaml')
WEB_INF_INDEX_YAML_PATH = os.path.join(
    os.getcwd(), '..', 'cloud_datastore_emulator_cache',
    'WEB-INF', 'index.yaml'
)


def open_yaml_as_dict(yaml_file):
    """Opens yaml file and returns it as a dictionary."""
    data = {}
    with open(yaml_file, 'r', encoding='utf-8') as fp:
        docs = yaml.safe_load_all(fp)
        for doc in docs:
            for key, value in doc.items():
                data[key] = value
    return data


def write(new_yaml_data_dict):
    """Writes new yaml data to index.yaml."""
    yaml_data = ''
    for data in new_yaml_data_dict:
        yaml_data += data + ':\n'
        yaml_data += yaml.dump(
            new_yaml_data_dict[data],
            indent=1,
            default_flow_style=False,
            sort_keys=False
        )
        yaml_data += '\n'
    yaml_data = yaml_data[:-1]
    yaml_data = yaml_data.replace('\n-', '\n\n-')
    with open(INDEX_YAML_PATH, 'w', encoding='utf-8') as fo:
        fo.write(yaml_data)


def extract_new_kind_from_yaml(INDEX_YAML_DICT, WEB_INF_INDEX_YAML_DICT):
    """Extract new kind from
    ../cloud_datastore_emulator_cache/WEB-INF/index.yaml
    and appends it to index.yaml.
    """
    extracted_data = []
    web_ind_index_yaml_data = [data['kind'] for data in WEB_INF_INDEX_YAML_DICT]
    for data in INDEX_YAML_DICT:
        if data['kind'] not in web_ind_index_yaml_data:
            extracted_data.append(data)
    return extracted_data

def update_yaml():
    """Update index.yaml"""
    ind = open_yaml_as_dict(INDEX_YAML_PATH)
    web_inf_ind = open_yaml_as_dict(WEB_INF_INDEX_YAML_PATH)
    web_inf_ind_keys = web_inf_ind.keys()
    for key in web_inf_ind_keys:
        if key not in ind.keys():
            ind[key] = []
        if web_inf_ind[key] is not None:
            value = extract_new_kind_from_yaml(web_inf_ind[key], ind[key])
            ind[key] += value
    
    write(ind)

update_yaml()